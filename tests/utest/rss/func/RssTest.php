<?php/** * UMI.Framework (http://umi-framework.ru/) * * @link      http://github.com/Umisoft/framework for the canonical source repository * @copyright Copyright (c) 2007-2013 Umisoft ltd. (http://umisoft.ru/) * @license   http://umi-framework.ru/license/bsd-3 BSD-3 License */namespace utest\rss\func;use DateTime;use umi\rss\IRssFeedAware;use umi\rss\TRssFeedAware;use utest\rss\RssTestCase;/** * Тестирование RSS */class RssTest extends RssTestCase implements IRssFeedAware{    use TRssFeedAware;    protected $dateTime;    protected $expectedFeedXml;    public function setUpFixtures()    {        $this->dateTime = new DateTime("08.04.2014");        $this->resolveOptionalDependencies($this);        $this->expectedFeedXml = '<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>title</title><link>http://example.com/</link><description>description</description><item><title>title1</title><link>http://example.com/1</link><description><![CDATA[description1]]></description><pubDate>Tue, 08 Apr 2014 00:00:00 +0400</pubDate></item><item><title>title2</title><link>http://example.com/2</link><description><![CDATA[description2]]></description><pubDate>Tue, 08 Apr 2014 00:00:00 +0400</pubDate></item></channel></rss>';    }    public function testRssFeed()    {        $feed = $this->createRssFeed('http://example.com/', 'title', 'description');        $feed->addItem()            ->setUrl('http://example.com/1')            ->setTitle('title1')            ->setContent('description1')            ->setDate($this->dateTime);        $feed->addItem()            ->setUrl('http://example.com/2')            ->setTitle('title2')            ->setContent('description2')            ->setDate($this->dateTime);        $this->assertEquals($this->expectedFeedXml, str_replace(["\n", "\r", "\r\n"], '', $feed));    }    public function testLoadFeed()    {        $xml = '<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>title</title><link>http://example.com/</link><description>description</description><item><title>title1</title><link>http://example.com/1</link><description><![CDATA[description1]]></description><pubDate>Tue, 08 Apr 2014 00:00:00 +0400</pubDate></item><item><title>title2</title><link>http://example.com/2</link><description><![CDATA[description2]]></description><pubDate>Tue, 08 Apr 2014 00:00:00 +0400</pubDate></item></channel></rss>';        $feed = $this->createRssFeedFromXml($xml);        $this->assertEquals($xml, str_replace(["\n", "\r", "\r\n"], '', $feed));    }}